<?php
/**
 * Created by OxGroup.
 * User: aliaxander
 * Date: 15.08.15
 * Time: 15:16
 */

namespace Acme\Console\Command;

use OxApp\helpers\IgApi;
use OxApp\models\Users;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Class CronCommands
 *
 * @package Acme\Console\Command
 */
class Likes extends Command
{
    /**
     * configure
     */
    protected function configure()
    {
        $this
            ->setName('test:likes')
            ->setDescription('Cron jobs');
    }
    
    /**
     * @param InputInterface  $input
     * @param OutputInterface $output
     *
     * @return mixed
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        require(__DIR__ . "/../../config.php");
        $requestCou = 0;
        $likeCou = 0;
        $followCou = 0;
        $api = new IgApi();
        $users = Users::limit([0 => 1])->find(['login' => 1, 'ban' => 0]);
        foreach ($users->rows as $user) {
            $api->proxy = $user->proxy;
            $api->username = $user->userName;
            $api->accountId = $user->accountId;
            $api->guid = $user->guid;
            $api->csrftoken = $user->csrftoken;
            
            if (empty($user->csrftoken)) {
                $tokenResult = '';
                $i = 0;
                while ($tokenResult === '') {
                    $sync = $api->sync();
                    $requestCou++;
                    print_r($sync);
                    
                    if (preg_match('#Set-Cookie: csrftoken=([^;]+)#', $sync[0], $token)) {
                        $tokenResult = $token[1];
                    }
                    if ($i == 10) {
                        $tokenResult = false;
                    }
                    if ($sync[1]['message'] === 'checkpoint_required') {
                        Users::where(['id' => $user->id])->update(['ban' => 1]);
                        die("Account banned");
                    }
                    
                    $i++;
                }
                if ($tokenResult == false || $tokenResult == '') {
                    die('empty token');
                }
                $api->csrftoken = $tokenResult;
                Users::where(['id' => $user->id])->update(['csrftoken' => $tokenResult]);
            }
            //$api->login($user->guid, $user->phoneId, $user->deviceId, $user->password);
            $accs = "2307470445
3037365164
3179098011
3257307082
4043396552
4778573207
4922685168
35961528
36988771
227754022
865071496
1461676567
2252202373
2259870139
2271582497
3413866451
3572768031
3968773032
4103799983
4131407797
4207787569
4241493042
4558525897
4613907200
4968362469
396376377
490307157
603021090
613131099
691932168
1329022344
1394751513
1468813211
1547513052
1551992557
1682224260
1689160654
1738697637
2061273905
2086442488
2241497629
2244518496
2389355119
2695987348
3169362944
3228861749
3249007104
3403621908
3456083125
3623456948
3658631849
4046748603
4209380076
4232680325
4254957207
4295081680
4453741427
4527910788
4583846233
4611040427
4813138814
4945840761
4998519532
2159562
19202426
28698960
46036857
204346026
246980280
644030140
699721404
1371768195
1536139314
2215783803
2234078255
3064844050
3886325230
4010683717
4673512213
4720219485
4736130806
4784429213
4817066790
4828963113
4991762490
4992022147
4993478628
5003393257
5003805089
5004031159
5018779
9173202
19035856
22792546
40901837
179515140
184419097
213043890
272019348
287155331
357055400
403570137
502655928
1362097922
1471684939
1506076144
1920036398
1987369463
2013692685
2227758920
2304852481
2381685070
2400412549
3058025680
3108023695
3118766758
3151925609
3172542761
3668025917
3779769608
3867692318
3949632281
3954739952
4016446820
4386215341
4534697850
4710490216
4713086377
4768800601
4844530081
4965382722
5004036787
5004050721
40021196
46390153
53140859
144781459
176210943
217540651
236882240
256839432
284922018
351120433
358353162
406211262
449105699
572398499
635496225
642981755
647648832
845519205
896263740
1078070716
1090133549
1308138056
1382856020
1430708881
1434914853
1468837936
1508173160
1527139100
1547427536
1564631817
1583721848
1597475626
1706389888
1722300789
1724260312
1754473881
1819731453
1911846538
1944422920
1984286684
2018609197
2060603260
2205853037
2235788893
2236144766
2239802760
2310910862
2337702356
2356374078
2377057900
2538911994
2925413985
2962013960
3035592067
3083382003
3233777923
3258517975
3294194629
3462003370
3505172868
3518679211
3525185548
3613687528
3631000313
3685466907
3694260527
3830243863
3881206384
3912761523
3939184828
3985894833
3992696444
4024034503
4026064651
4042359116
4072603541
4082057140
4130185564
4179683723
4192403575
4199779303
4238035280
4249641453
4254197930
4315429040
4323788596
4337982382
4416175878
4571246129
4625327830
4700077087
4730817465
4789063707
4789214175
4822317681
4824715855
4837458657
4908140287
4916915808
4928490261
4928544328
4947596637
4984598642
4987164111
4990414797
4993770451
4999052237
2892647
4094696
7236739
15049394
23455021
27334209
33071453
34607291
41500472
43074785
47085701
49351928
54006759
177084628
187961517
192446345
193271152
202432000
243191568
261349131
270663840
290532254
294577004
296453978
380445376
463418295
478110373
497924923
499238387
520979807
534800974
543145339
566393002
578735569
610817614
612847826
639233018
693401695
978032776
986045389
1043670900
1056675003
1090066000
1216854514
1320380435
1353836391
1360752195
1364063369
1389495948
1425829018
1433784164
1435902005
1445647840
1468164398
1542260212
1571858669
1575291859
1589748138
1594513030
1601390114
1652923210
1696522277
1703300475
1728115896
1774685498
1817937709
1832100006
1904459140
1912838166
1921639765
1965108495
2006820384
2007431634
2034131195
2058723578
2080724124
2094884439
2102189720
2110816321
2113600507
2125343700
2165864759
2178940997
2202982254
2203680488
2204682584
2249189514
2271210992
2290237843
2290492133
2295735656
2300142862
2303589319
2312999228
2320096678
2357704893
2520624702
2685835921
2958135440
2964588660
3012884062
3020486324
3036584689
3041482323
3041982849
3079373747
3101288698
3142706361
3163170521
3165952298
3170766218
3275211168
3304298250
3410236027
3414837996
3430490999
3461180179
3539689510
3543301369
3575975077
3582117754
3598484383
3603354978
3626742045
3666330455
3673148891
3676490168
3865824610
3888558872
3931623827
3954066626
3960468651
3982095937
3987292558
3997737006
4009411808
4018190328
4040830471
4056434248
4065405768
4113160918
4200575085
4221309339
4227523691
4263336987
4320436213
4342180767
4387614696
4457049586
4458047851
4478869636
4521615991
4535817556
4540262937
4550543932
4633383133
4637238861
4669728665
4716705265
4758044760
4839402792
4852090030
4914890391
4920814613
4950727854
4978017865
4983612584
4989333141
4992229190
1659613
4067156
4231140
9005758
11721142
12822700
13504471
15394380
16943588
19431191
20546741
23141617
24638813
30197511
30768008
30804519
31195627
32366504
32567915
34319826
34524454
35455121
37490238
45462296
52141342
53976903
56086702
56174572
144328243
144522546
144638601
220459190
223790413
235651044
239975950
254493194
256284690
268905952
270157840
271489312
279783713
279884518
282259615
292421038
306832796
315535060
332278256
334862005
346816744
352614292
362491544
366962055
370297011
387725020
392724270
448413987
448418045
464680386
483040582
497690162
511129054
573268609
643993753
743756032
874843282
964893232
983133294
1018481626
1025996319
1029919228
1087663853
1158229387
1162634720
1182665183
1202540750
1251690612
1253165438
1275694674
1306738437
1355569890
1398492429
1400463777
1428333508
1436069475
1450282689
1461185816
1476041342
1477574806
1492923251
1504178887
1515263547
1536472649
1550993409
1556616848
1558854104
1564438116
1571084098
1579304513
1581645941
1593996148
1600494951
1638206246
1639101314
1655770229
1658366230
1686701206
1695279161
1714939512
1730413726
1779233746
1787819176
1791452865
1805312781
1805594288
1812952770
1814722799
1820313856
1825101337
1836248670
1838344845
1949634224
1951220176
1955263245
1956850244
1979878088
1985655105
1998046212
2053256756
2063526435
2064188107
2065732612
2066180322
2079704067
2081799747
2097609612
2102764257
2104070930
2109438330
2116934021
2119480688
2123830471
2125661663
2126828200
2138844555
2153760876
2157728905
2188445003
2205670757
2213686178
2215194759
2237621644
2243571203
2252432816
2261947417
2272347558
2280351788
2280945603
2288093223
2295807745
2313040910
2324934725
2514081531
2537516085
2537931577
2679910781
2719093703
2722282301
2865908035
2873847322
2905017444
2938129866
2985005952
3026882326
3048816643
3052157867
3053866652
3056382264
3070751132
3107164532
3107270917
3140035715
3155402733
3174869751
3209111500
3232185250
3247938463
3281273363
3286881069
3323798604
3411926070
3412652804
3429720054
3474950454
3496366248
3501012759
3522526811
3522801187
3540628136
3541361998
3546601586
3546603152
3547616430
3557566199
3558735720
3573938227
3611496080
3653034154
3670680105
3683190718
3695741373
3747675591
3871987709
3908230209
3933950664
3954812337
3970273203
3993429967
4001452766
4012582260
4039378605
4043452493
4062000649
4075724520
4092689844
4113114707
4139262083
4142381104
4149499750
4156207472
4163662113
4176774817
4199741550
4201715306
4222245034
4227511817
4228501746
4256853096
4257050754
4282980646
4303713032
4320854278
4331788998
4339552703
4344298759
4353118973
4353598737
4355430597
4355937402
4396389654
4419815539
4470034419
4551084519
4559715299
4559932175
4587397667
4634497405
4649138168
4659048744
4667744391
4676632174
4707119059
4712814058
4713778149
4722053260
4725414606
4736484296
4736907708
4756967644
4760522797
4781920011
4783435923
4787809767
4797473891
4809988497
4825614714
4828330178
4836702575
4840965394
4858063084
4861733263
4866041452
4909482271
4910312284
4935701859
4975390145
4976364239
4980060472
4981031120
4982008564
4982336202
4983871406
4995192994
5004160216
5004406677
640678
1930325
5262325
5991105
7200555
8603486
8844676
9377130
10599994
10844791
11011215
11373184
15310110
18460127
19388876
20993557
26729114
27757417
27828347
28070825
29602367
30934574
31048268
34480693
34602192
39350622
44999838
49688300
55465010
144695953
145295138
145318577
176320849
179192481
181200501
182720871
185838163
186087217
186225070
187301945
187594680
189454674
200154973
200301073
201923144
202300587
203370817
203829384
209050377
209820681
211643602
212802043
214448239
215754988
220105404
225503970
235408835
238183140
244203632
253677420
256895735
258842750";
            $accs = explode("\n", $accs);
            foreach ($accs as $acc) {
                echo "Set acc $acc:\n";
                $result = $api->getFeed($acc);
                $requestCou += 3;
                if (rand(0, 1) == 1) {
                    if (isset($result[1]['items'])) {
                        $rows = $result[1]['items'];
                        $like1 = @$result[1]['items'][rand(0, count($rows) - 1)]['id'];
                        $like2 = @$result[1]['items'][rand(0, count($rows) - 1)]['id'];
                        sleep(rand(15, 30));
                        if (rand(0, 10) === 9) {
                            print_r($api->follow($acc));
                            $followCou++;
                        }
                        sleep(rand(20, 40));
                        if ($like1) {
                            print_r($api->like($like1));
                            $likeCou++;
                        }
                        sleep(rand(20, 40));
                        
                        if (rand(0, 1) == 1 && $like2) {
                            print_r($api->like($like2));
                            $likeCou++;
                        }
                    }
                    
                    sleep(rand(10, 30));
                }
                sleep(rand(5, 20));
            }
            echo "Requests: $requestCou | Likes: $likeCou | Follows: $followCou\n";
            
        }
        
        return $output->writeln("Complite");
    }
}
